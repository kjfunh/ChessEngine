const { Chess } = require('./chess.js');

function getPieceVal(piece)
{
    // Value assignment
    if (piece === null) {
        return 0;
    }
    var pieceValues = {p:10, n:30, r:50, b:30, q:90, k:1000};
    var value = 0;
    var pieceLowerCase = piece.type.toLowerCase();
    if (pieceLowerCase in pieceValues)
    {
        value = pieceValues[pieceLowerCase];
    }
    return value;
}

// Evaluate board value for the current player
// player = "b" or "w"
function evaluateBoard(board, player)
{
    var totalScore = 0;
    // Evaluate 8*8 position on board:
    for(var i = 0; i < 8; i++)
    {
        for(var j = 0; j <8; j ++)
        {
            piece = board[i][j];
            if (piece !== null)
            {
                pieceValue = getPieceVal(piece);
                if(piece.color === player)
                {
                    totalScore = totalScore + pieceValue;
                }
                else{
                    totalScore = totalScore - pieceValue;
                }
            }
        }
    }
    return totalScore;
}

function getBestMove(game_input, player)
{
    game = Object.create(game_input);
    moves = game.moves();
    bestValue = -1000000;
    bestIndex = 0;
    for(var i = 0; i < moves.length; i++)
    {
        game.move(moves[i]);
        curValue = evaluateBoard(game.board(), player);
        if(curValue > bestValue)
        {
            bestValue = curValue;
            bestIndex = i;
        }
        game.undo();
    }
    return moves[bestIndex];
}


const chess = new Chess();
console.log(evaluateBoard(chess.board(), "w"))


while (!chess.game_over()) {
    const move = getBestMove(chess, chess.turn())
    chess.move(move);
    console.log(chess.ascii());
};

